{"version":3,"sources":["hooks/calculatorContext.js","components/Display.jsx","components/Buttonpad.jsx","App.js","index.js"],"names":["CalculatorContext","React","createContext","useCalculator","useContext","CalculatorProvider","children","useState","displayValue","setDisplayValue","displayNumber","setDisplayNumber","dotUse","setDotUse","addPoint","prevState","addOperator","value","restart","addDisplay","result","eval","toFixed","e","buttons","name","styleNames","clickFunction","store","disValue","disNumber","Provider","Display","className","ButtonPad","map","element","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ea374a4.chunk.js","sourcesContent":["import React, {useContext, useState} from 'react';\r\n\r\nconst CalculatorContext = React.createContext();\r\n\r\n\r\nexport function useCalculator() {\r\n    return useContext(CalculatorContext)\r\n}\r\n\r\nexport function CalculatorProvider ({children}){\r\n    const [displayValue, setDisplayValue] = useState('0');\r\n    const [displayNumber, setDisplayNumber] = useState('0')\r\n    const [dotUse, setDotUse] = useState(false);    \r\n    \r\n    const addPoint = () => {\r\n        if (dotUse === false){\r\n            setDisplayValue(prevState => prevState+'.')\r\n            setDisplayNumber(prevState=>prevState+'.')\r\n            setDotUse(true)\r\n        }\r\n    }\r\n\r\n    const addOperator = (value) => {\r\n        setDisplayValue(prevState=> prevState+''+value)\r\n        setDisplayNumber(\"0\")\r\n        setDotUse(false)\r\n    }\r\n\r\n    const restart = () =>{\r\n        setDisplayValue('0')\r\n        setDisplayNumber('0')\r\n        setDotUse(false)\r\n    }\r\n\r\n    const addDisplay = (value) => {\r\n        if(value == \"AC\"){\r\n            restart()\r\n        } else if (displayValue == '0'){\r\n            setDisplayValue(value)\r\n            setDisplayNumber(value)\r\n        } else {\r\n            setDisplayValue(prevState => prevState+''+value)\r\n            if (displayNumber =='0'){\r\n                setDisplayNumber(value)\r\n            } else{\r\n                setDisplayNumber(prevState => prevState+''+value)\r\n            }\r\n        } \r\n    } \r\n\r\n    const result = () => {\r\n        try {\r\n            if (eval(displayValue)%1 != 0){\r\n                setDisplayValue(eval(displayValue).toFixed(6))\r\n                setDisplayNumber(eval(displayValue).toFixed(6))\r\n            } else{\r\n                setDisplayValue(eval(displayValue))\r\n                setDisplayNumber(eval(displayValue))\r\n            }\r\n        } catch (e) {\r\n            setDisplayValue(\"ERROR\")\r\n            setDisplayNumber(\"ERROR\")\r\n        }\r\n    }\r\n\r\n    const buttons = [\r\n        {name: 'AC',\r\n        styleNames:\"col-span-2 btn-red\",\r\n        clickFunction:() => addDisplay('AC')\r\n        },\r\n        {name: '/',\r\n        styleNames:\"btn-blue\",\r\n        clickFunction:() => addOperator('/')\r\n        },\r\n        {name: 'x',\r\n        styleNames:\"btn-blue\",\r\n        clickFunction:() => addOperator('*')\r\n        },\r\n        {name: '7',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(7)\r\n        },\r\n        {name: '8',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(8)\r\n        },\r\n        {name: '9',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(9)\r\n        },\r\n        {name: '-',\r\n        styleNames:\"btn-blue\",\r\n        clickFunction:() => addOperator('-')\r\n        },\r\n        {name: '4',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(4)\r\n        },\r\n        {name: '5',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(5)\r\n        },\r\n        {name: '6',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(6)\r\n        },\r\n        {name: '+',\r\n        styleNames:\"btn-blue\",\r\n        clickFunction:() => addOperator('+')\r\n        },\r\n        {name: '1',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(1)\r\n        },\r\n        {name: '2',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(2)\r\n        },\r\n        {name: '3',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addDisplay(3)\r\n        },\r\n        {name: '=',\r\n        styleNames:\"row-span-2 btn-red\",\r\n        clickFunction:() => result()\r\n        },\r\n        {name: '0',\r\n        styleNames:\"col-span-2 btn-darkblue\",\r\n        clickFunction:() => addDisplay(0)\r\n        },\r\n        {name: '.',\r\n        styleNames:\"btn-darkblue\",\r\n        clickFunction:() => addPoint()\r\n        }\r\n    ]\r\n\r\n    const store = {\r\n        disValue: displayValue, \r\n        disNumber: displayNumber,\r\n        buttons: buttons,\r\n        addDisplay,\r\n        addPoint,\r\n        addOperator,\r\n        result\r\n    }\r\n\r\n    return (\r\n        <CalculatorContext.Provider value = {store}>\r\n            {children}\r\n        </CalculatorContext.Provider>\r\n    )\r\n}","import React from 'react'\r\nimport {useCalculator} from '../hooks/calculatorContext'\r\n\r\nconst Display = () => {\r\n    const displayValue = useCalculator()\r\n    return(\r\n    <div className=\"truncate h-1/5 w-full pt-2 md:pt-0 pr-2 flex flex-col items-end\">\r\n        <p className=\"text-red-700 font-semibold md:text-2xl\">{displayValue.disValue}</p>\r\n        <p className=\"text-gray-50 text-2xl md:text-4xl\">{displayValue.disNumber}</p>\r\n    </div>)\r\n}\r\n\r\nexport default Display","import React from 'react'\r\nimport {useCalculator} from '../hooks/calculatorContext'\r\n\r\nconst ButtonPad = () => {\r\n    const displayValue = useCalculator()\r\n    \r\n    return(\r\n    <div className=\"h-4/5 grid grid-cols-4 gap-0.5\">\r\n        {displayValue.buttons.map(element => <button className={`font-bold ${element.styleNames}`} onClick={element.clickFunction}>{element.name}</button>)}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ButtonPad","import './App.css';\nimport Display from './components/Display';\nimport ButtonPad from './components/Buttonpad'\nimport {CalculatorProvider} from './hooks/calculatorContext'\n\nfunction App() {\n  return (\n    <CalculatorProvider>\n        <div className=\"bg-black h-screen flex flex-col items-center justify-center\">\n          <h1 className=\"text-gray-50 pb-12 font-semibold text-3xl text-center md:text-4xl\">Calculadora con React Hooks</h1>\n            <div className=\"rounded-sm bg-gray-700 w-4/5 h-3/5 md:w-3/5 lg:w-2/4\">\n              <Display />\n              <ButtonPad />\n            </div>\n        </div>\n    </CalculatorProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/main.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}