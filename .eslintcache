[{"C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\index.js":"1","C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\App.js":"2","C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\components\\Display.jsx":"3","C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\components\\Buttonpad.jsx":"4","C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\hooks\\calculatorContext.js":"5"},{"size":438,"mtime":1608014183711,"results":"6","hashOfConfig":"7"},{"size":621,"mtime":1608023732131,"results":"8","hashOfConfig":"7"},{"size":410,"mtime":1608023754234,"results":"9","hashOfConfig":"7"},{"size":876,"mtime":1607586723963,"results":"10","hashOfConfig":"7"},{"size":1862,"mtime":1607586985705,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jrwfdg",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},"C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\index.js",[],"C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\App.js",[],"C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\components\\Display.jsx",[],"C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\components\\Buttonpad.jsx",[],["24","25"],"C:\\Users\\repra\\Documents\\Programación\\calculator-react\\src\\hooks\\calculatorContext.js",["26","27","28","29","30"],"import React, {useContext, useState} from 'react';\r\n\r\nconst CalculatorContext = React.createContext();\r\n\r\n\r\nexport function useCalculator() {\r\n    return useContext(CalculatorContext)\r\n}\r\n\r\nexport function CalculatorProvider ({children}){\r\n    const [displayValue, setDisplayValue] = useState('0');\r\n    const [displayNumber, setDisplayNumber] = useState('0')\r\n    const [dotUse, setDotUse] = useState(false);    \r\n    \r\n    const addPoint = () => {\r\n        if (dotUse === false){\r\n            setDisplayValue(prevState => prevState+'.')\r\n            setDisplayNumber(prevState=>prevState+'.')\r\n            setDotUse(true)\r\n        }\r\n    }\r\n\r\n    const addOperator = (value) => {\r\n        setDisplayValue(prevState=> prevState+''+value)\r\n        setDisplayNumber(\"0\")\r\n        setDotUse(false)\r\n    }\r\n\r\n    const restart = () =>{\r\n        setDisplayValue('0')\r\n        setDisplayNumber('0')\r\n        setDotUse(false)\r\n    }\r\n\r\n    const addDisplay = (value) => {\r\n        if(value == \"AC\"){\r\n            restart()\r\n        } else if (displayValue == '0'){\r\n            setDisplayValue(value)\r\n            setDisplayNumber(value)\r\n        } else {\r\n            setDisplayValue(prevState => prevState+''+value)\r\n            if (displayNumber =='0'){\r\n                setDisplayNumber(value)\r\n            } else{\r\n                setDisplayNumber(prevState => prevState+''+value)\r\n            }\r\n        } \r\n    } \r\n\r\n    const result = () => {\r\n        setDisplayValue(eval(displayValue))\r\n        setDisplayNumber(eval(displayValue))\r\n    }\r\n\r\n    const store = {\r\n        disValue: displayValue, \r\n        disNumber: displayNumber,\r\n        addDisplay,\r\n        addPoint,\r\n        addOperator,\r\n        result\r\n    }\r\n\r\n    return (\r\n        <CalculatorContext.Provider value = {store}>\r\n            {children}\r\n        </CalculatorContext.Provider>\r\n    )\r\n}",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":36,"column":18,"nodeType":"37","messageId":"38","endLine":36,"endColumn":20},{"ruleId":"35","severity":1,"message":"36","line":38,"column":33,"nodeType":"37","messageId":"38","endLine":38,"endColumn":35},{"ruleId":"35","severity":1,"message":"36","line":43,"column":31,"nodeType":"37","messageId":"38","endLine":43,"endColumn":33},{"ruleId":"39","severity":1,"message":"40","line":52,"column":25,"nodeType":"41","messageId":"38","endLine":52,"endColumn":29},{"ruleId":"39","severity":1,"message":"40","line":53,"column":26,"nodeType":"41","messageId":"38","endLine":53,"endColumn":30},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-eval","eval can be harmful.","CallExpression","no-global-assign","no-unsafe-negation"]